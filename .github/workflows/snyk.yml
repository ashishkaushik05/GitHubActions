name: Snyk Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

jobs:
  security:
    name: Run Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
        if: contains(github.event.repository.languages, 'JavaScript')

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        if: contains(github.event.repository.languages, 'Python')

      - name: Install Node.js dependencies
        run: npm ci
        if: contains(github.event.repository.languages, 'JavaScript')

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: contains(github.event.repository.languages, 'Python')

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true
        if: contains(github.event.repository.languages, 'JavaScript')

      - name: Run Snyk to check Python vulnerabilities
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
        continue-on-error: true
        if: contains(github.event.repository.languages, 'Python')

      - name: Create GitHub Issue for Vulnerabilities
        if: failure() && github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let report = '';
            
            // Read Snyk output files if they exist
            try {
              if (fs.existsSync('snyk-node-report.json')) {
                const nodeReport = JSON.parse(fs.readFileSync('snyk-node-report.json', 'utf8'));
                report += '## Node.js Vulnerabilities\n\n';
                report += nodeReport.vulnerabilities.map(v => `- ${v.title} (${v.severity})\n`).join('');
              }
            } catch (e) {}
            
            try {
              if (fs.existsSync('snyk-python-report.json')) {
                const pythonReport = JSON.parse(fs.readFileSync('snyk-python-report.json', 'utf8'));
                report += '\n## Python Vulnerabilities\n\n';
                report += pythonReport.vulnerabilities.map(v => `- ${v.title} (${v.severity})\n`).join('');
              }
            } catch (e) {}
            
            if (report) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Security Vulnerabilities Detected',
                body: `# Security Alert\n\nVulnerabilities were detected in the dependencies:\n\n${report}\n\nPlease review and update the affected packages.`,
                labels: ['security', 'vulnerability']
              });
            }

      - name: Comment on Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let report = '';
            
            try {
              if (fs.existsSync('snyk-node-report.json')) {
                const nodeReport = JSON.parse(fs.readFileSync('snyk-node-report.json', 'utf8'));
                report += '## Node.js Vulnerabilities\n\n';
                report += nodeReport.vulnerabilities.map(v => `- ${v.title} (${v.severity})\n`).join('');
              }
            } catch (e) {}
            
            try {
              if (fs.existsSync('snyk-python-report.json')) {
                const pythonReport = JSON.parse(fs.readFileSync('snyk-python-report.json', 'utf8'));
                report += '\n## Python Vulnerabilities\n\n';
                report += pythonReport.vulnerabilities.map(v => `- ${v.title} (${v.severity})\n`).join('');
              }
            } catch (e) {}
            
            if (report) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `# Security Scan Results\n\nVulnerabilities were detected in the dependencies:\n\n${report}\n\nPlease review and update the affected packages.`
              });
            } 